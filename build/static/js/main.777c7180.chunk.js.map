{"version":3,"sources":["history.js","Context.js","components/FerbyLoading/FerbyLoading.jsx","theme/colorimetria.js","theme/ferbyTheme.js","components/FerbySuspense/FerbySuspense.jsx","App.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","Context","createContext","context","Provider","children","useState","test","setTest","value","activeTest","deactivateTest","Consumer","useStyles","makeStyles","theme","loading","position","left","right","top","margin","height","width","bottom","FerbyLoading","props","classes","className","color","colors","darkBlue","black","limeGreen","darkGreen","white","createTheme","palette","primary","main","light","secondary","FerbySuspense","fallback","RegisterIndex","lazy","Login","AdminIndex","AdminServiceIndex","AdminService","AdminFile","Download","AdminClient","AdminDashboard","AdminRegisterOperators","AdminRegisterTransports","AdminCsds","Alv","ServiceReq","CartaPorteForm","Home","App","ThemeProvider","history","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.777c7180.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n","import React,{ createContext, useState } from \"react\";\r\n\r\nconst Context = createContext()\r\n\r\nconst Provider = ({children}) => {\r\n    const [test, setTest] = useState(false)\r\n\r\n    const value = {\r\n        test,\r\n        activeTest: () => {\r\n            setTest(true)\r\n        },\r\n        deactivateTest: () => {\r\n            setTest(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={value}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nconst consumer = Context.Consumer;\r\n\r\nconst context = {\r\n    Provider,\r\n    Consumer: consumer\r\n}\r\n\r\n\r\n\r\nexport default context","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loading: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        right: 0,\r\n        top: 'calc(50% - 20px)',\r\n        margin: 'auto',\r\n        height: '40px',\r\n        width: '40px',\r\n        '& img': {\r\n            position: 'absolute',\r\n            height: '25px',\r\n            width: 'auto',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n        },\r\n    },\r\n}))\r\n\r\nconst FerbyLoading = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            {/* <img src=\"/assets/images/logo-circle.svg\" alt=\"\" /> */}\r\n            <CircularProgress color=\"primary\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FerbyLoading\r\n","const colors = {\r\n    darkBlue:\"#210D49\", \r\n    black:\"#101111\", \r\n    limeGreen:\"#1CF445\",\r\n    darkGreen:\"#2D302E\", \r\n    white:\"#FFFF\"};\r\n\r\nexport default colors;","import { createTheme } from \"@mui/material/styles\";\r\nimport colors from \"./colorimetria\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: colors.darkBlue,\r\n            light: colors.limeGreen\r\n        },\r\n        secondary: {\r\n            main:colors.black,\r\n            light: colors.darkGreen\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import React, { Suspense } from 'react'\r\nimport FerbyLoading from '../FerbyLoading/FerbyLoading'\r\n\r\nconst FerbySuspense = ({ children }) => {\r\n    return <Suspense fallback={<FerbyLoading />}>{children}</Suspense>\r\n}\r\n\r\nexport default FerbySuspense","import { ThemeProvider } from '@mui/material';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Routes,\r\n    \r\n  } from \"react-router-dom\";\r\nimport history from './history.js'\r\nimport { React,lazy } from 'react';\r\nimport theme from './theme/ferbyTheme'\r\n// import './index.css'\r\nimport FerbySuspense from './components/FerbySuspense/FerbySuspense';\r\n// import { AuthProvider } from './contexts/FirebaseAuthContext';\r\n// import AuthGuard from './auth/AuthGuard'\r\n// import './App.css';\r\n\r\nconst RegisterIndex = lazy(() => import('./views/sessions/register/RegisterIndex'))\r\nconst Login = lazy(() => import('./views/sessions/login/Login'))\r\nconst AdminIndex = lazy (() => import('./views/admin/AdminIndex.jsx'))\r\nconst AdminServiceIndex = lazy (() => import('./views/admin/admin_views/AdminServiceIndex.jsx'))\r\nconst AdminService = lazy (() => import('./views/admin/admin_views/servicio_nuevo/AdminService.jsx'))\r\nconst AdminFile = lazy (() => import('./views/admin/admin_views/servicio_nuevo/AdminFile.jsx'))\r\nconst Download = lazy(() => import('./views/admin/admin_views/servicio_nuevo/Download'))\r\nconst AdminClient = lazy (() => import('./views/admin/admin_views/AdminClient.jsx'))\r\nconst AdminDashboard = lazy (() => import('./views/admin/admin_views/AdminDashboard.jsx'))\r\nconst AdminRegisterOperators = lazy(() =>  import('./views/admin/admin_views/adminRegister/AdminRegisterOperators'))\r\nconst AdminRegisterTransports = lazy(() =>  import('./views/admin/admin_views/adminRegister/AdminRegisterTransports'))\r\nconst AdminCsds = lazy(() => import('./views/admin/admin_views/adminRegister/AdminCsds.jsx'))\r\nconst Alv = lazy(() => import('./views/admin/admin_views/adminRegister/alv.jsx'))\r\nconst ServiceReq = lazy(() => import('./views/cartaporte/ServiceReq.jsx'));\r\nconst CartaPorteForm = lazy(() => import('./views/cartaporte/CartaPorteForm.jsx'));\r\nconst Home = lazy(() => import('./views/Home.jsx'))\r\n\r\nfunction App() {\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n          <Router history={history}>\r\n              <FerbySuspense> \r\n                  <Routes>\r\n                      <Route path=\"/\" element={<Home/>}></Route>\r\n                      <Route path=\"/carta\" element={<CartaPorteForm/>}></Route>\r\n                      <Route path=\"/service\" element={<ServiceReq/>}></Route>\r\n                      <Route path=\"/login\" element={<Login/>}></Route>\r\n                      <Route path=\"/register\" element={<RegisterIndex/>}></Route>\r\n\r\n                      <Route path=\"/admin\" element={<AdminIndex/>}></Route>\r\n                      <Route path=\"/admin/serviceIndex\" element={<AdminServiceIndex/>}></Route>\r\n                      <Route path=\"/admin/service\" element={<AdminService/>}></Route>\r\n                      <Route path=\"/admin/file\" element={<AdminFile/>}></Route>\r\n                      <Route path=\"/admin/download\" element={<Download/>} />\r\n                      <Route path=\"/admin/client\" element={<AdminClient/>}></Route>\r\n                      <Route path=\"/admin/dashboard\" element={<AdminDashboard/>}></Route>\r\n                      <Route path=\"/admin/operators\" element={<AdminRegisterOperators/>}></Route>\r\n                      <Route path=\"/admin/transports\" element={<AdminRegisterTransports/>}></Route>\r\n                      <Route path=\"/admin/certs\" element={<AdminCsds/>}></Route>\r\n                      <Route path=\"/admin/alv\" element={<Alv/>}></Route>\r\n                  </Routes>\r\n              </FerbySuspense>\r\n          </Router>\r\n      </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Context from './Context'\r\n\r\nReactDOM.render(\r\n  <Context.Provider>\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>\r\n  </Context.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}